syntax = "proto3";

// nested types: define types within types
// we can use nested types as deeply we want
// avoiding naming conflicts
// enforcing some level of "locality" for that type

// Profile message
message Profile{
  string  name    = 1;
  string  family  = 2;
  int32   age     = 3;
  repeated string numbers = 4;
  // we can add another message as a type into specific message that we want to have
  Date birthday = 5;

  // we can write message inside another message | nested type or nested message we can say
  // It's Profile.Address
  message Address{
    string address1  = 1;
    string address2  = 2;
    // ...
  }
  // some multiple address
  repeated Address addresses = 6;
}

// Date message
message Date{
  int32 year = 1;
  int32 month = 2;
  int32 days = 3;
}